{% set version = "1.17.1" %} 

package:
  name: pyagrum
  version: {{ version }}

source:
  fn: pyagrum-{{ version }}.tar.bz2
  url: https://gitlab.com/agrumery/aGrUM/-/archive/{{ version }}/aGrUM-{{ version }}.tar.bz2
  sha256: 32b6e297d906e5b33f6578f730a7db68e28133b3b378b2644eef181a3c76e92e

build:
  number: 0
  skip: true  # [py<310]
  run_exports:
    - {{ pin_subpackage('pyagrum', max_pin='x.x.x') }}

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - cmake
    - make  # [unix]
    - {{ compiler('c') }}  # [unix]
    - {{ stdlib("c") }}    # [unix]
    - {{ compiler('cxx') }}  # [unix] 
    - curl  # [win]
    - 7za  # [win]
  host:
    - python
    - numpy
    - pydot
    - six
    - matplotlib-base
    - IPython
    - ipykernel
    - pandas
    - matplotlib-inline
    - scikit-learn
    - scipy
  run:
    - python
    - numpy
    - pydot
    - six
    - matplotlib-base
    - IPython
    - ipykernel
    - pandas
    - matplotlib-inline
    - scikit-learn
    - scipy

test:
  requires:
    - ipykernel
  imports:
    - pyAgrum
    - pyAgrum.lib.bn2roc
    - pyAgrum.lib.bn2scores
    - pyAgrum.lib.bn_vs_bn
    - pyAgrum.lib.dynamicBN
    - pyAgrum.lib.notebook

about:
  home: http://agrum.gitlab.io/
  license: LGPL-3.0-only
  license_file: COPYRIGHT.txt
  summary: pyAgrum is a scientific C++ and Python library dedicated to Bayesian Networks and other Probabilistic Graphical Models.
  description: |
    aGrUM is a C++ library for graphical models. It is designed for easily building applications
    using graphical models such as Bayesian networks, influence diagrams, decision trees, GAI networks
    or Markov decision processes. pyAgrum provides a high-level interface to the part of aGrUM allowing
    to create, model, learn, use, calculate with and embed Bayesian Networks and other graphical models.
    Some specific (python and C++) codes are added in order to simplify and extend the aGrUM API.
  doc_url: https://pyagrum.readthedocs.io/
  dev_url: https://gitlab.com/agrumery/aGrUM

extra:
  recipe-maintainers:
    - jschueller
    - ltorti
    - aspard
